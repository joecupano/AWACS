#!/bin/bash

###
### AWACS Package
###
### package_openwebrx
###
###
### 20250801-0100
###

log "Installing OpenWebRX ..."
sudo apt-get update
sudo apt-get install -y libfftw3-dev python3-setuptools
sudo apt-get install -y rtl-sdr libsndfile-dev librtlsdr-dev automake autoconf libtool pkg-config libsamplerate-dev libpython3-dev

### csdr
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/csdr.git
cd csdr
mkdir build && cd build
cmake ..
make
sudo make install
sudo ldconfig

### pysdr
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/pycsdr.git
cd pycsdr
sudo python3 setup.py install install_headers

### js8py
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/js8py.git
cd js8py
sudo python3 setup.py install

### SoapyModules
sudo apt-get install libsoapysdr0.7 libsoapysdr-dev soapysdr-tools
# also install sdr-specific modules:
sudo apt-get install soapysdr-module-all

### owrx_connector
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/owrx_connector.git
cd owrx_connector
mkdir build && cd build
cmake ..
make
sudo make install
sudo ldconfig

### codecserver
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/codecserver.git
cd codecserver
mkdir build && cd build
cmake ..
make
sudo make install
sudo ldconfig
# Create codecserver user and set permissions for serial devices, if necessary
# The username "codecserver" is used for the systemd service unit, so if you
# want to chose another user to run codecserver as, please adapt accordingly.
sudo adduser --system --group --no-create-home --home /nonexistent --quiet codecserver
sudo usermod -aG dialout codecserver

### digiham
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/digiham.git
cd digiham
mkdir build && cd build
cmake ..
make
sudo make install

### pydigiham
cd $AWACS_SOURCE
git clone -b master https://github.com/jketterl/pydigiham.git
cd pydigiham
sudo python3 setup.py install

## Codec2
cd $AWACS_SOURCE
git clone https://github.com/drowe67/codec2.git
cd codec2
mkdir build && cd build
cmake ..
make
sudo make install
# manually install freedv_rx since it's not part of the default install package
sudo install -m 0755 src/freedv_rx /usr/local/bin
sudo ldconfig

### m17-cxx-demod
cd $AWACS_SOURCE
sudo apt-get install -y libboost-program-options-dev
git clone https://github.com/mobilinkd/m17-cxx-demod.git
cd m17-cxx-demod
mkdir build && cd build
cmake ..
make
sudo make install

## DireWolf
cd $AWACS_SOURCE
sudo apt-get install -y direwolf
sudo git clone https://github.com/hessu/aprs-symbols /usr/share/aprs-symbols

## WSJT-X
cd $AWACS_SOURCE
sudo apt-get install -y asciidoc automake libtool texinfo gfortran libhamlib-dev qtbase5-dev qtmultimedia5-dev
sudo apt-get install -y qttools5-dev asciidoctor libqt5serialport5-dev qttools5-dev-tools libudev-dev xsltproc libboost-dev libboost-log-dev libboost-regex-dev wget
wget https://sourceforge.net/projects/wsjt/files/wsjtx-2.7.0/wsjtx-2.7.0.tgz
tar xvfz wsjtx-2.7.0.tgz
cd wsjtx-2.7.0
mkdir build
cd build
cmake ..
make
sudo make install

## OpenWebRX
cd $AWACS_SOURCE
git clone https://github.com/jketterl/openwebrx.git
        
### Data Storage
sudo mkdir /var/lib/openwebrx
sudo chown pi. /var/lib/openwebrx
touch /var/lib/openwebrx/users.json
touch /var/lib/openwebrx/bands.json
        
sudo sh -c "echo [] > /var/lib/openwebrx/users.json"
sudo chown pi. /var/lib/openwebrx/users.json
sudo chmod 0600 /var/lib/openwebrx/users.json

### Run OpenWebRX to complete setup
cd $AWACS_SOURCE/openwebrx
./openwebrx.py&
sleep 5
        
### Create initial user for WebUI
cd $AWACS_SOURCE/openwebrx
./openwebrx.py admin adduser pi

### Setup and enable systemd service
sudo cp $AWACS_TEMPLATES/openwebrx.service /etc/systemd/system/openwebrx.service
sleep 5
sudo systemctl enable openwebrx


